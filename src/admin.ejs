<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admin Panel</title>
  <link rel="stylesheet" href="style.css" />
</head>

<body class="bg-slate-950 text-xl flex w-full min-h-screen text-white p-4 md:p-7 flex-row flex-wrap">
  <div id="popup"
    class="border-solid border-2 border-gray-400 w-auto p-3 top-10 bg-blue-700 translate-x-100 max-w-56 z-50 my-10 font-sans font-semibold fixed text-white right-0 rounded-md transition-all duration-300 md:text-lg md:p-4 md:max-w-72">
    MESSAGE
  </div>

  <nav id="nav" class="fixed mx-auto z-50 top-2 flex text-xl w-[95vw] bg-opacity-20 h-14 backdrop-blur-3xl rounded-full bg-gray-500 px-4 py-0 text-white items-center  justify-between">



    <div class="w-screen flex flex-wrap items-center justify-between p-0">
      <a href="/">
        <span id="titleName" class="self-center text-2xl font-semibold whitespace-nowrap text-transparent animate-gradient-4 bg-[length:200%_auto] bg-[linear-gradient(to_right,theme(colors.blue.500),theme(colors.purple.500),theme(colors.pink.500),theme(colors.yellow.500),theme(colors.pink.500),theme(colors.purple.400),theme(colors.blue.500))] bg-clip-text ml-3">MailNews</span>
      </a>
      <button id="navbar-solid-bg-btn" data-collapse-toggle="navbar-solid-bg-btn" type="button" class="inline-flex items-center p-2 justify-center text-base font-bold text-w-500 rounded-lg md:hidden hover:bg-transparent text-gray-400 focus:outline-none focus:bg-transparent" aria-controls="navbar-solid-bg" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        Explore <span class="ml-1" id="navArrow">
          <img class=" !transition-all !duration-200 w-5 h-5" loading="eager" src="https://img.icons8.com/ios-filled/9CA3AF/50/expand-arrow--v1.png" alt="expand-arrow--v1">
            </span>
      </button>
      <div id="mobile-menu" class="hidden top-12 lg:hidden w-full rounded-xl text-xl fixed text-left z-50 bg-slate-900 bg-opacity-100 opacity-100 backdrop-blur-3xl duration-500 p-0 left-0 font-normal border-b-blue-600 border-b-2 text-yellow-400">
        <a href="#substat" class="flex  py-3 px-6 align-middle justify-between">Subs-Stats
          <span class="text-right">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
              <path stroke-linecap="round" stroke-linejoin="round" d="M17.25 8.25 21 12m0 0-3.75 3.75M21 12H3"></path>
            </svg>
          </span>
        </a>
        <a href="#topics" class="flex   py-3 px-6 align-middle justify-between">Topic Stats
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M17.25 8.25 21 12m0 0-3.75 3.75M21 12H3"></path>
          </svg>
        </a>
      
        <a href="#slots" class="flex   py-3 px-6 align-middle justify-between">Slot Stats
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M17.25 8.25 21 12m0 0-3.75 3.75M21 12H3"></path>
          </svg>
        </a>
        <a href="#query" class="flex   py-3 px-6 align-middle justify-between">Issues & Queries
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M17.25 8.25 21 12m0 0-3.75 3.75M21 12H3"></path>
          </svg>
        </a>
        <a href="#news" class="flex   py-3 px-6 align-middle justify-between">Logout Admin
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
            <path stroke-linecap="round" stroke-linejoin="round" d="M17.25 8.25 21 12m0 0-3.75 3.75M21 12H3"></path>
          </svg>
        </a>
      </div>
      <div class="hidden w-full md:block md:w-auto" id="navbar-solid-bg">
       
        <ul class="flex flex-col transition-all duration-500 !text-center justify-evenly font-medium mt-4 rounded-lg bg-gray-50 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-transparent">
          <li>
            <a href="#substat" class="block hover:text-pink-500 duration-300 text-yellow-400 py-2  md:p-0 md:bg-transparent md:dark:bg-transparent ml-3 lg:ml-6 " aria-current="page">Subs-Stats</a>
          </li>
          <li>
            <a href="#topics" class="block py-2 px-3 md:p-0 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 hover:text-pink-500 duration-300 text-yellow-400 md:dark:hover:bg-transparent ml-3 lg:ml-6 ">Topic-Stats</a>
          </li>
          <li>
            <a href="#slots" class="block py-2 px-3 md:p-0 hover:text-pink-500 duration-300 text-yellow-400 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:dark:hover:bg-transparent ml-3 lg:ml-6 ">
              Slot-Stats
            </a>
          </li>
          <li>
            <a href="#query" class="block py-2 px-3 md:p-0 hover:text-pink-500 duration-300 text-yellow-400 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:dark:hover:bg-transparent ml-3 lg:ml-6 ">
             Queries
            </a>
          </li>
          <li>
            <a href="/logout" class="block py-2 px-3 md:p-0 rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 hover:text-pink-500 duration-300 text-green-400 md:dark:hover:bg-transparent ml-3 lg:ml-6 ">Logout Admin</a>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <h1 class="text-3xl font-bold  text-center w-screen mt-20 md:mt-16">MailNews Admin Panel</h1>
  <!-- GRID 1 -->
  <div class="grid grid-flow-row md:grid-flow-col md:grid-cols-2 w-full gap-8 my-14">
    <div class="w-full flex flex-col gap-3 flex-wrap h-fit">
      <h1 class="text-3xl font-semibold w-full">Subscribers</h1>
      
    <a name="substat"></a>
      <div class="w-full grid grid-cols-2 gap-3">
        <div class="w-full h-full bg-slate-800 bg-opacity-55 text-white rounded-lg p-2 font-semibold text-lg">
          Total Subs: <%= totalSubscribers %>
        </div>
        <div class="w-full h-full bg-slate-800 bg-opacity-55 text-white rounded-lg p-2 font-semibold text-lg">
          Subs/Day: <span id="subperday"></span>
        </div>
        <div class="w-full h-full bg-slate-800 bg-opacity-55 text-white rounded-lg p-2 font-semibold text-lg">
          Subs in 15 Days: <span id="last15"></span>
        </div>
        <div class="w-full h-full bg-slate-800 bg-opacity-55 text-white rounded-lg p-2 font-semibold text-lg">
          Avg User Per Slot: <span id="subperday"></span>
        </div>
      </div>
      <div class="w-full">
        <canvas id="subsChart" class="w-1/2 h-1/2 fill-white !min-h-60 "></canvas>
      </div>
      <div class="flex justify-center" onchange="UpdateChart()">
        <select name="time" id="subsChart"
          class="bg-slate-800 rounded-xl text-white px-5 text-base py-2 w-fit font-semibold">
          <option value="week">Last Week</option>
          <option value="15Days" selected>Last 15 Days</option>
          <option value="month">Last Month</option>
        </select>
      </div>
    </div>

    <div class="w-full flex flex-col gap-3 flex-wrap h-fit text-left">
      <h1 class="text-3xl font-semibold block">Topics</h1>
      
    <a name="topics" ></a>
      <div class="w-11/12 max-h-full flex items-center justify-center">
        <canvas id="topicTotalChart" class="w-max fill-white"></canvas>
      </div>
    </div>
  </div>
  <!-- GRID 2 -->
  <div class="w-full">
    <h1 class="text-3xl font-semibold mb-2">Slot Wise Email Timings</h1>
    
    <a name="slots" class=""></a>
    <div class="grid grid-cols-3 w-full gap-x-10">
      <div class="w-full col-span-3 md:col-span-2">
        <canvas id="timeSlotChartArea" class='w-full h-36'></canvas>
      </div>
      <div class="text-white col-span-3 md:col-span-1 mt-8 md:mt-0 h-full">
        <table class="!border-white w-full text-center rounded-s-md h-full">
          <thead class="h-1/6">

            <tr>
              <th class="bg-slate-800 w-1/2 border-white border-2 ">Top Slots</th>
              <th class="bg-slate-800 w-1/2 border-white border-2 ">Count</th>
            </tr>
          </thead>
          <% for (var obj of (Object.entries(emailSlots).sort((a, b)=> b[1] - a[1]).slice(0,5))) { %>
            <tr>
              <td class="border-white border-2 ">
                <%= obj[0] %>
              </td>
              <td class="border-white border-2 ">
                <%= obj[1] %>
              </td>
            </tr>
            <% } %>
              </tbody>
        </table>
      </div>
    </div>

  </div>

  <!-- GRID 3 -->
   <a name="query"></a>
  <div class="w-full my-12">
    <h1 class="text-3xl font-semibold mb-6 ">Querys and Issues Raised</h1>

    <% if(queryIssueData.length==0) { %>
      <h1 class="font-semibold text-xl">No New or Unreplied Issue/Query</h1>
      <% } for(var queryIssue of queryIssueData){ %>
        <%- include('QueryDisplay.ejs', {querytitle:queryIssue.content, id:queryIssue.id , date:queryIssue.date,
          name:queryIssue.name, email:queryIssue.email, displayReply:"*/"}) %>
          <% } %>
  </div>
</body>

</html>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script nonce="">
  var subsChartDisplay = document.getElementById('subsChart');
  var topicPieChart = document.getElementById("topicTotalChart");
  var slotChart = document.getElementById("timeSlotChartArea");
  //Arranging DateWise Subs Data from Server
  var DateWiseSubs = {};
      <% for (var dos in subscribers) {  %>
    DateWiseSubs['<%= dos %>'] = <%=  subscribers[dos] %>;
          <% }; %>


    function getLastNDates(n) {
      const datesArray = [];
      const currentDate = new Date();

      for (let i = 0; i < n; i++) {
        const date = new Date();
        date.setDate(currentDate.getDate() - i);
        datesArray.push(date);
      }

      return datesArray.map(date => date.toISOString().split('T')[0]);
    }


  //Data Preperation For Subscribers Chart
  //#region

  var last15DaysCount = 0;
  var DateWiseOutput = {}
  for (var date of getLastNDates(15)) {
    DateWiseOutput[date] = `${(DateWiseSubs[date] ? DateWiseSubs[date] : 0)}`;
    last15DaysCount += (DateWiseSubs[date] ? DateWiseSubs[date] : 0)
  }

  document.querySelector("#last15").innerText = last15DaysCount

  DateWiseOutput = Object.keys(DateWiseOutput)
    .sort()
    .reduce((accumulator, key) => {
      accumulator[key] = DateWiseOutput[key];
      return accumulator;
    }, {});

  document.getElementById('subperday').innerText = (<%= totalSubscribers %> / Object.keys(DateWiseSubs).length).toFixed(2);
  //#endregion

  var topicsDataProcessed = {}
    <% for (var dos in topicsData) {  %>
      topicsDataProcessed['<%= dos %>'] = <%=  topicsData[dos] %>;
          <% }; %>

          
  var slotDataProcessed = {}
    <% for (var i = 0; i < 49; i++) { %>
      slotDataProcessed[<%= i %>] = <%= emailSlots[i] ? emailSlots[i] : 0 %>;
        <% } %>

    function UpdateChart() {
      switch (document.querySelector('select').value) {
        case "week":

          {
            var DateWiseOutput = {}
            subsChart.destroy();
            for (var date of getLastNDates(7)) {
              DateWiseOutput[date] = `${(DateWiseSubs[date] ? DateWiseSubs[date] : 0)}`;

            }
            DateWiseOutput = Object.keys(DateWiseOutput)
              .sort()
              .reduce((accumulator, key) => {
                accumulator[key] = DateWiseOutput[key];
                return accumulator;
              }, {});
            drawSubsChart(DateWiseOutput);
            break;
          }

        case "15Days":
          {
            var DateWiseOutput = {}
            subsChart.destroy();
            for (var date of getLastNDates(15)) {
              DateWiseOutput[date] = `${(DateWiseSubs[date] ? DateWiseSubs[date] : 0)}`;
            }
            DateWiseOutput = Object.keys(DateWiseOutput)
              .sort()
              .reduce((accumulator, key) => {
                accumulator[key] = DateWiseOutput[key];
                return accumulator;
              }, {});
            drawSubsChart(DateWiseOutput);
            break;
          }

        case "month":
          {
            var DateWiseOutput = {}
            subsChart.destroy();
            for (var date of getLastNDates(30)) {
              DateWiseOutput[date] = `${(DateWiseSubs[date] ? DateWiseSubs[date] : 0)}`;
            }
            DateWiseOutput = Object.keys(DateWiseOutput)
              .sort()
              .reduce((accumulator, key) => {
                accumulator[key] = DateWiseOutput[key];
                return accumulator;
              }, {});
            drawSubsChart(DateWiseOutput);
            break;
          }

        default:
          break;
      }
    }


  // Setting Up Charts
  var subsChart;

  function drawSubsChart(DateWiseOutput) {
    subsChart = new Chart(subsChartDisplay, {
      type: 'line',

      data:
      {
        options: {

          legend: {
            labels: {

              fontColor: 'white'
            }
          }
        },
        labels: Object.keys(DateWiseOutput),

        datasets: [
          {
            label: 'Subscribers',
            fill: true,
            lineTension: 0.25,
            backgroundColor: '#16a34a2a',
            borderColor: '#16a34a',
            data: Object.values(DateWiseOutput),
          }]
      },


    })

  }
  drawSubsChart(DateWiseOutput)

  Chart.defaults.color = 'white';
  var topicsChart = new Chart(topicPieChart, {
    type: "doughnut",
    data: {
      datasets: [{
        data: Object.values(topicsDataProcessed)
      }],
      labels: Object.keys(topicsDataProcessed)
    },
    options: {
      plugins: {
        legend: {
          display: true,
          position: 'bottom',
          labels: {
            usePointStyle: true
          }
        },

      }
    }
  })


  var EmailSlotChart = new Chart(slotChart, {
    type: "bar",
    data: {
      datasets: [
        {
          label: 'Subscribers',
          fill: true,
          lineTension: 0.25,
          backgroundColor: 'cyan',
          data: Object.values(slotDataProcessed),
        }],
      labels: Object.keys(slotDataProcessed)
    },
  })

  // Reply JS 

  function submitReply(id) {
    document.getElementById(id).querySelector("button").setAttribute("disabled","disabled")
    fetch("/reply", {
      method: "POST",
      body: new URLSearchParams({ queryID: id, reply: document.getElementById(id).querySelector("input").value }),
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
    }).then(res => {
      if (res.status == 200) {
        showPopup("Replied Successfully", "info");
        document.getElementById(id).remove();
      }
      else if (res.status == 404) {
        showPopup("Complaint With This ID Not Found, Please Refresh The Page Once", "err")
      }
      else if (res.status == 500) {
        showPopup("Some Error Occurred in Server", "err")
        document.getElementById(id).querySelector("button").removeAttribute("disabled")
      } else if (res.status == 401) {
        setTimeout(() => {
          showPopup("Re-Login", "warn")
        }, 2000);
      }
    })
  }


</script>